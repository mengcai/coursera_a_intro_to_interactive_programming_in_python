# Implementation of classic arcade game Pong

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True

# initialize ball_pos and ball_vel for new bal in middle of table
ball_pos = [WIDTH / 2, HEIGHT / 2]
horizon_vel = random.randrange(120, 240) / 60
vertical_vel = random.randrange(60, 180) / 60
ball_vel = [horizon_vel, vertical_vel]
paddle1_pos = paddle2_pos = HEIGHT / 2
paddle1_vel = paddle2_vel = 0
score1 = score2 = 0

# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel # these are vectors stored as lists
    global horizon_vel, vertical_vel
    
    ball_pos = [WIDTH / 2, HEIGHT / 2]
    ball_vel[1] = -vertical_vel
    if direction == RIGHT:
        ball_vel[0] = horizon_vel
    else:
        ball_vel[0] = -horizon_vel
    pass

# define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    
    ball_pos = [WIDTH / 2, HEIGHT / 2]
    paddle1_pos = paddle2_pos = HEIGHT / 2
    paddle1_vel = paddle2_vel = 0
    score1 = score2 = 0
    RIGHT = True
    spawn_ball(RIGHT)
    
def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel
        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
    
    # draw ball
    ball = canvas.draw_circle(ball_pos, BALL_RADIUS, 2, 'White', 'White')
        
    # update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    
    # draw paddles
    paddle1 = canvas.draw_line([HALF_PAD_WIDTH, paddle2_pos + HALF_PAD_HEIGHT], [HALF_PAD_WIDTH, paddle2_pos - HALF_PAD_HEIGHT],8, "white")
    paddle2 = canvas.draw_line([WIDTH - HALF_PAD_WIDTH, paddle1_pos + HALF_PAD_HEIGHT], [WIDTH - HALF_PAD_WIDTH, paddle1_pos - HALF_PAD_HEIGHT],8, "white")
    
    # update paddle's vertical position, keep paddle on the screen
    paddle1_pos += paddle1_vel
    paddle2_pos += paddle2_vel   
    
    if paddle1_pos <= HALF_PAD_HEIGHT:
        paddle1_pos = HALF_PAD_HEIGHT
    if paddle2_pos <= HALF_PAD_HEIGHT:
        paddle2_pos = HALF_PAD_HEIGHT
       
    if paddle1_pos >= HEIGHT - HALF_PAD_HEIGHT:
        paddle1_pos = HEIGHT - HALF_PAD_HEIGHT
    if paddle2_pos >= HEIGHT - HALF_PAD_HEIGHT:
        paddle2_pos = HEIGHT - HALF_PAD_HEIGHT        

    # determine hit the top or bottom    
    if ball_pos[1] < BALL_RADIUS:
        ball_vel[1] = -ball_vel[1]
    if ball_pos[1] > HEIGHT - BALL_RADIUS:
        ball_vel[1] = -ball_vel[1]
    
    # determine whether paddle and ball collide     
    if ball_pos[0] - BALL_RADIUS < PAD_WIDTH:
        if ball_pos[1] < paddle2_pos - PAD_HEIGHT or ball_pos[1] > paddle2_pos + HALF_PAD_HEIGHT:
            spawn_ball(RIGHT)
            score2 += 1    
        else:
            ball_vel[0] = -ball_vel[0] * 1.2
            
    if  ball_pos[0] + BALL_RADIUS > WIDTH - PAD_WIDTH:
        if ball_pos[1] < (paddle1_pos - PAD_HEIGHT) or ball_pos[1] > (paddle1_pos + HALF_PAD_HEIGHT):
            spawn_ball(LEFT)
            score1 += 1
        else:
            ball_vel[0] = -ball_vel[0] * 1.2
            
    # draw scores
    position1, position2 = [200, 100], [350, 100]
    canvas.draw_text(str(score1), position1, 100, 'Yellow')
    canvas.draw_text(str(score2), position2, 100, 'Yellow')
    
def keydown(key):
    global paddle1_vel, paddle2_vel
    v = 2
    if key == simplegui.KEY_MAP['up']:
        paddle1_vel -= v
    elif key == simplegui.KEY_MAP['down']:
        paddle1_vel += v
    elif key == simplegui.KEY_MAP['w']:
        paddle2_vel -= v
    elif key == simplegui.KEY_MAP['s']:
        paddle2_vel += v                       

def keyup(key):   
    global paddle1_vel, paddle2_vel
    w = 0
    if key == simplegui.KEY_MAP['up']:
        paddle1_vel = w
    elif key == simplegui.KEY_MAP['down']:
        paddle1_vel = w
    elif key == simplegui.KEY_MAP['w']:
        paddle2_vel = w
    elif key == simplegui.KEY_MAP['s']:
        paddle2_vel = w    

# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
frame.add_button('Restart', new_game, 150)

# start frame
new_game()
frame.start()
